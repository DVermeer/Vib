{"version":3,"sources":["site.es5.min.js"],"names":["defaultFetchOptions","credentials","headers","defaultPostOptions","Object","assign","method","defaultGetOptions","post","url","options","fetch","get","postJson","data","body","JSON","stringify","then","response","json","getJson","getMySessions","getFullSessions","subcribe","sessionId","unsubcribe","subscribeToSession","id","markSessionsAsSubscribed","markSessionsAsFull","markSlots","unsubscribeToSession","markSlotAsSubscribed","slot","classList","add","markSlotAsUnsubscribed","remove","hasSubscribedSession","querySelector","slots","Array","from","document","querySelectorAll","forEach","filter","markSessionAs","className","session","markSessionsAs","sessionIds","sessions","e","showPopupForSession","showPopupElement","style","overflow","closePopupForSession","hidePopupElement","hideElement","element","showElement","getPopupElement","closeButtons","button","addEventListener","event","stopPropagation","dataset","subscribeButtons","unsubscribeButtons","bind"],"mappings":"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","file":"site.es5.min.js","sourcesContent":["const defaultFetchOptions = {\n    credentials: 'same-origin',\n    headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    }\n}\n\nconst defaultPostOptions = Object.assign({}, defaultFetchOptions, { method: 'post' });\nconst defaultGetOptions = Object.assign({}, defaultFetchOptions, { method: 'get' });\n\nconst post = (url, options) => fetch(url, Object.assign({}, defaultPostOptions, options))\nconst get = (url, options) => fetch(url, Object.assign({}, defaultGetOptions, options))\n\nconst postJson = (url, data, options) => post(url, Object.assign({ body: JSON.stringify(data) }, options)).then(response => response.json())\nconst getJson = (url, data, options) => get(url, Object.assign({ body: JSON.stringify(data) }, options)).then(response => response.json())\n\nconst getMySessions = () => getJson('/api/sessions/subscribed')\nconst getFullSessions = () => getJson('/api/sessions/full')\n\nconst subcribe = sessionId => postJson('/api/sessions/subscribe', { 'Id': sessionId })\nconst unsubcribe = sessionId => postJson('/api/sessions/unsubscribe', { 'Id': sessionId })\r\n\r\n\r\n\r\nconst subscribeToSession = id => subcribe(id)\r\n    .then(markSessionsAsSubscribed)\r\n    .then(getFullSessions)\r\n    .then(markSessionsAsFull)\r\n    .then(markSlots)\r\n\r\nconst unsubscribeToSession = id => unsubcribe(id)\r\n    .then(markSessionsAsSubscribed)\r\n    .then(getFullSessions)\r\n    .then(markSessionsAsFull)\r\n    .then(markSlots)\r\n\r\nconst markSlotAsSubscribed = slot => slot.classList.add('slot__subscribed-session')\r\nconst markSlotAsUnsubscribed = slot => slot.classList.remove('slot__subscribed-session')\r\nconst hasSubscribedSession = slot => slot.querySelector('.subscribed')\r\n\r\nconst markSlots = function () {\r\n    const slots = Array.from(document.querySelectorAll('.slot'))\r\n\r\n    // remove class form all slots\r\n    slots.forEach(markSlotAsUnsubscribed)\r\n\r\n    // add class to slots with subscribed session\r\n    slots.filter(hasSubscribedSession).forEach(markSlotAsSubscribed)\r\n}\r\n\r\nconst markSessionAs = function (className, sessionId) {\r\n    const session = document.querySelector(`.session[data-session-id=\"${sessionId}\"]`)\r\n    if (session) {\r\n        session.classList.add(className)\r\n    }\r\n}\r\n\r\nconst markSessionsAs = function (className, sessionIds) {\r\n    // eerst alles verwijderen\r\n    const sessions = Array.from(document.querySelectorAll('.session'))\r\n    sessions.forEach(e => e.classList.remove(className))\r\n\r\n    // markeer de waar id klopt\r\n    sessionIds.forEach(sessionId => markSessionAs(className, sessionId))\r\n}\r\n\r\nconst markSessionsAsFull = sessionIds => markSessionsAs('full', sessionIds)\r\nconst markSessionsAsSubscribed = sessionIds => markSessionsAs('subscribed', sessionIds)\r\n\r\n\r\nconst showPopupForSession = function (id) {\r\n    showPopupElement(id)\r\n    document.body.style.overflow = 'hidden';\r\n    // Deze regel voorkomt overscroll op iPhone, als je op dezelfde positie wilt blijven\r\n    // zorg voor offsetTop na het sluiten van de popup\r\n    // document.body.style.position = 'fixed';\r\n}\r\n\r\nconst closePopupForSession = function (id) {\r\n    hidePopupElement(id)\r\n    document.body.style.overflow = '';\r\n    // Deze regel voorkomt overscroll op iPhone\r\n    // document.body.style.position = '';\r\n}\r\n\r\nconst hideElement = element => element.classList.remove('show');\r\nconst showElement = element => element.classList.add('show');\r\n\r\nconst getPopupElement = sessionId => document.querySelector(`.session[data-session-id=\"${sessionId}\"] .js-modal-content`)\r\n\r\nconst hidePopupElement = sessionId => hideElement(getPopupElement(sessionId))\r\nconst showPopupElement = sessionId => showElement(getPopupElement(sessionId))\r\n\r\nconst closeButtons = Array.from(document.querySelectorAll('.js-modal-close'))\r\ncloseButtons.forEach(button => button.addEventListener('click', event => {\r\n    event.stopPropagation()\r\n    closePopupForSession(button.dataset.sessionId)\r\n}))\r\n\r\nconst subscribeButtons = Array.from(document.querySelectorAll('.js-subscribe'))\r\nsubscribeButtons.forEach(button => button.addEventListener('click', event => {\r\n    event.stopPropagation()\r\n    subscribeToSession(button.dataset.sessionId)\r\n    closePopupForSession(button.dataset.sessionId)\r\n}))\r\n\r\nconst unsubscribeButtons = Array.from(document.querySelectorAll('.js-unsubscribe'))\r\nunsubscribeButtons.forEach(button => button.addEventListener('click', event => {\r\n    event.stopPropagation()\r\n    unsubscribeToSession(button.dataset.sessionId)\r\n    closePopupForSession(button.dataset.sessionId)\r\n}))\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const sessions = Array.from(document.querySelectorAll('.session'))\r\n    sessions.forEach(session => session.addEventListener('click', showPopupForSession.bind(null, session.dataset.sessionId)))\r\n\r\n    getMySessions()\r\n        .then(markSessionsAsSubscribed)\r\n        .then(markSlots)\r\n})"]}